/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hardwarehome;

import com.mysql.jdbc.Connection;
import static java.lang.Thread.sleep;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class issue extends javax.swing.JInternalFrame {

    /**
     * Creates new form itemReg
     */
     Connection conn;
ResultSet rs;
PreparedStatement pst;
    public issue() {
        initComponents();
        conn=(Connection) newdb.ConnectDb();
        clock();
        tablelord();
         LocalDate today=LocalDate.now();
         
         da.setText(today.toString());
         
        try{
   String sql="SELECT DISTINCT `fn` FROM `rega`";
   pst=conn.prepareStatement(sql);
   rs=pst.executeQuery();
   while(rs.next()){
     ib.addItem(rs.getString("fn"));
      
   }
   
       }
       catch(Exception e){
       JOptionPane.showMessageDialog(rootPane, e);
       }
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ca = new javax.swing.JComboBox<>();
        co = new javax.swing.JTextField();
        na = new javax.swing.JTextField();
        qu = new javax.swing.JTextField();
        lo = new javax.swing.JTextField();
        da = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        pe = new javax.swing.JTextField();
        timer = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        pu = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ib = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        item = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ca.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        ca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Material", "Tool" }));
        jPanel1.add(ca, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 170, 180, 40));

        co.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        co.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                coKeyReleased(evt);
            }
        });
        jPanel1.add(co, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 180, 40));

        na.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jPanel1.add(na, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 180, 40));

        qu.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jPanel1.add(qu, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 280, 180, 40));

        lo.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jPanel1.add(lo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 160, 40));

        da.setFont(new java.awt.Font("Sitka Text", 1, 14)); // NOI18N
        jPanel1.add(da, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 160, 40));

        time.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jPanel1.add(time, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 20, 150, 30));

        pe.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        pe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                peKeyReleased(evt);
            }
        });
        jPanel1.add(pe, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 160, 40));
        jPanel1.add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(549, 20, 120, 30));

        pu.setColumns(20);
        pu.setRows(5);
        jScrollPane2.setViewportView(pu);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 236, -1, 90));

        jLabel3.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel3.setText("Category");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel4.setText("Code");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, -1, -1));

        jLabel5.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel5.setText("Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, -1, 20));

        jLabel6.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel6.setText("Location");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 130, -1, -1));

        jLabel7.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel7.setText("Date");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, -1, -1));

        jLabel8.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel8.setText("Issued To");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 80, -1, -1));

        jLabel9.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel9.setText("Quantity");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, -1));

        jLabel10.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel10.setText("Purpose");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, -1));

        jLabel11.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jLabel11.setText("Issued By");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        ib.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "personel" }));
        jPanel1.add(ib, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 180, 40));

        jButton1.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jButton1.setText("Issue");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 80, 100, 50));

        jButton2.setFont(new java.awt.Font("Sitka Text", 1, 16)); // NOI18N
        jButton2.setText("Return");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 150, 100, 50));

        item.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        item.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(item);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 347, 900, 130));

        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 920, 480));

        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void clock()
{
    Thread clock=new Thread(){
        public void run(){
            try{
                while(true){
                   Calendar cal=new GregorianCalendar(); 
                   int day=cal.get(Calendar.DAY_OF_MONTH);
                   int month=cal.get(Calendar.MONTH);
                   int year=cal.get(Calendar.YEAR);
                   
                   int second=cal.get(Calendar.SECOND);
                   int minute=cal.get(Calendar.MINUTE);
                   int hour=cal.get(Calendar.HOUR);
                   time.setText(hour +":" +minute +":"+second);
                   //txtdate.setText(year+":"+month+":"+ day);
                   sleep(1000); }
            } catch (Exception e){
                JOptionPane.showMessageDialog(rootPane, e);
                }
            }
        };
    clock.start();
    }
private void update(){
     try{
     String sql="UPDATE `borrow` SET `mark`='1' WHERE pe='"+pe.getText()+"' AND ti='"+timer.getText()+"' ";
     pst=conn.prepareStatement(sql);
     pst.execute();
   //  JOptionPane.showMessageDialog(rootPane, "Update Succesful");
    // tablelord();
     }
     catch(Exception e){
     JOptionPane.showMessageDialog(rootPane, e);
     }
     }
    private void tablelord(){
    try{
    String sql="SELECT `ib`, `co`, `ca`, `na`, `qu`, `pe`, `lo`, `da`, `pu`, `ti` FROM `borrow` ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    item.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
    pst.execute();
    }
    catch(Exception e){
    }
    
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(ib.getSelectedItem().equals("Select")|| co.getText().isEmpty()||ca.getSelectedItem().equals("Select")|| na.getText().isEmpty()|| qu.getText().isEmpty()|| lo.getText().isEmpty()|| da.getText().isEmpty()|| pe.getText().isEmpty()||pu.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Cannot be Empty!!");
        
        }
        else{
        try{
        String sql="insert into borrow(ib,co,ca,na,qu,pe,lo,da,pu,ti,mark) values(?,?,?,?,?,?,?,?,?,?, '0')";
        pst=conn.prepareStatement(sql);
        
        pst.setString(1, ib.getSelectedItem().toString());
        pst.setString(2, co.getText());
        pst.setString(3, ca.getSelectedItem().toString());
        
        pst.setString(4, na.getText());
        pst.setString(5, qu.getText());
        pst.setString(6, pe.getText());
        pst.setString(7, lo.getText());
        pst.setString(8, da.getText());
        pst.setString(9, pu.getText());
        pst.setString(10, time.getText());
        pst.execute();
        JOptionPane.showMessageDialog(null, "Issued Successfully");
        tablelord();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(ib.getSelectedItem().equals("Select")|| co.getText().isEmpty()||ca.getSelectedItem().equals("Select")|| na.getText().isEmpty()|| qu.getText().isEmpty()|| lo.getText().isEmpty()|| da.getText().isEmpty()|| pe.getText().isEmpty()||pu.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, "Cannot be Empty!!");
        
        }
        else{
        try{
        String sql="insert into ret(ib,co,ca,na,qu,pe,lo,da,pu) values(?,?,?,?,?,?,?,?,?)";
        pst=conn.prepareStatement(sql);
        
        pst.setString(1, ib.getSelectedItem().toString());
        pst.setString(2, co.getText());
        pst.setString(3, ca.getSelectedItem().toString());
        
        pst.setString(4, na.getText());
        pst.setString(5, qu.getText());
        pst.setString(6, pe.getText());
        pst.setString(7, lo.getText());
        pst.setString(8, da.getText());
        pst.setString(9, pu.getText());
        
        pst.execute();
        JOptionPane.showMessageDialog(null, "Returned Successfully");
        //tablelord();
        update();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void coKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_coKeyReleased
        // TODO add your handling code here:
        try{
        String sql="SELECT `ca`, `co`, `na`, `qu`, `lo`, `da`, `pe` FROM `item` WHERE co='"+co.getText()+"'";
        pst=conn.prepareStatement(sql);
        rs=pst.executeQuery();
        if(rs.next()){
            ca.setSelectedItem(rs.getString("ca"));
            na.setText(rs.getString("na"));
            qu.setText(rs.getString("qu"));
            lo.setText(rs.getString("lo"));
            da.setText(rs.getString("da"));
           
        }
        else{
        ca.setSelectedItem("Select");
        na.setText("");
        qu.setText("");
        lo.setText("");
        
        pe.setText("");
        }
        }
        catch(Exception e){
        }
    }//GEN-LAST:event_coKeyReleased

    private void peKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_peKeyReleased
        // TODO add your handling code here:
        try{
         try{
    String sql="SELECT `ib`, `co`, `ca`, `na`, `qu`, `pe`, `lo`, `da`, `pu`, `ti` FROM `borrow`WHERE pe LIKE'%"+pe.getText()+"%' ";
    pst=conn.prepareStatement(sql);
    rs=pst.executeQuery();
    item.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
    pst.execute();
    }
    catch(Exception e){
    }
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_peKeyReleased

    private void itemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tModel=(DefaultTableModel) item.getModel();
        int selectrowindex=item.getSelectedRow();
                ib.setSelectedItem(tModel.getValueAt(selectrowindex, 0).toString());
        co.setText(tModel.getValueAt(selectrowindex, 1).toString());
        ca.setSelectedItem(tModel.getValueAt(selectrowindex, 2).toString());
         na.setText(tModel.getValueAt(selectrowindex, 3).toString());
         qu.setText(tModel.getValueAt(selectrowindex, 4).toString());
         pe.setText(tModel.getValueAt(selectrowindex, 5).toString());
         lo.setText(tModel.getValueAt(selectrowindex, 6).toString());
         
         pu.setText(tModel.getValueAt(selectrowindex, 8).toString());
         timer.setText(tModel.getValueAt(selectrowindex, 9).toString());
         
    }//GEN-LAST:event_itemMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ca;
    private javax.swing.JTextField co;
    private javax.swing.JTextField da;
    private javax.swing.JComboBox<String> ib;
    private javax.swing.JTable item;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lo;
    private javax.swing.JTextField na;
    private javax.swing.JTextField pe;
    private javax.swing.JTextArea pu;
    private javax.swing.JTextField qu;
    private javax.swing.JTextField time;
    private javax.swing.JTextField timer;
    // End of variables declaration//GEN-END:variables
}
